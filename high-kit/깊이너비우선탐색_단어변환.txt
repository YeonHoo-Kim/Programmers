#include <string>
#include <vector>
#include <map>

using namespace std;

map<string, int> visited;
int answer = 0;

bool compare(string a, string b){
    int cnt = 0;
    for(int i=0;i<a.size();i++){
        if(a.at(i) != b.at(i)){
            cnt++;
        }
    }
    if(cnt == 1){
        return true;
    }
    else{
        return false;
    }
}

void DFS(vector<string> w, string begin, string target, int cnt){
    if(target == begin){
        if(answer == 0 || answer > cnt){
            answer = cnt;
        }
        return;
    }
    visited[begin] = 1;                             // visited을 하되 도착점은 제외
    for(int i=0;i<w.size();i++){
        if(visited[w[i]] == 0 && compare(begin, w[i])){
            DFS(w, w[i], target, cnt+1);
        }
    }
}

int solution(string begin, string target, vector<string> words) {
    words.insert(words.begin(),begin);
    DFS(words, begin, target, 0);
    return answer;
}